# Задача 20:

# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.

# В случае с английским алфавитом очки распределяются так:

# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# А русские буквы оцениваются так:

# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного пользователем слова k и 
# выводит его. Будем считать, что на вход подается только одно слово, которое содержит 
# либо только английские, либо только русские буквы.

# Пример:
# k = 'ноутбук'
# # 12

k = 'ноутбук'

# Решение 1:

scrabble_scores_en = {
    1: "A E I O U L N S T R",
    2: "D G",
    3: "B C M P",
    4: "F H V W Y",
    5: "K",
    8: "J X",
    10: "Q Z"
}

scrabble_scores_ru = {
    1: "А В Е И Н О Р С Т",
    2: "Д К Л М П У",
    3: "Б Г Ё Ь Я",
    4: "Й Ы",
    5: "Ж З Х Ц Ч",
    8: "Ш Э Ю",
    10: "Ф Щ Ъ"
}

# Создаем словари для быстрого поиска стоимости каждой буквы
score_map_en = {letter: score for score, letters in scrabble_scores_en.items() for letter in letters.split()}
score_map_ru = {letter: score for score, letters in scrabble_scores_ru.items() for letter in letters.split()}

# Определяем, является ли слово английским или русским
if k[0].upper() in score_map_en:
    score_map = score_map_en
else:
    score_map = score_map_ru

# Вычисляем стоимость слова
total_score = sum(score_map[letter.upper()] for letter in k)

print(total_score)

# Этот код делает следующее:

# Определяет стоимость каждой буквы в английском и русском алфавитах.
# Создает словари для быстрого поиска стоимости каждой буквы.
# Определяет, на каком языке введено слово, по первой букве.
# Вычисляет и выводит общую стоимость слова, суммируя стоимости всех его букв.


# Решение 2:

scrabble_scores = {
    'A': 1, 'E': 1, 'I': 1, 'O': 1, 'U': 1, 'L': 1, 'N': 1, 'S': 1, 'T': 1, 'R': 1,
    'D': 2, 'G': 2,
    'B': 3, 'C': 3, 'M': 3, 'P': 3,
    'F': 4, 'H': 4, 'V': 4, 'W': 4, 'Y': 4,
    'K': 5,
    'J': 8, 'X': 8,
    'Q': 10, 'Z': 10,
    'А': 1, 'В': 1, 'Е': 1, 'И': 1, 'Н': 1, 'О': 1, 'Р': 1, 'С': 1, 'Т': 1,
    'Д': 2, 'К': 2, 'Л': 2, 'М': 2, 'П': 2, 'У': 2,
    'Б': 3, 'Г': 3, 'Ё': 3, 'Ь': 3, 'Я': 3,
    'Й': 4, 'Ы': 4,
    'Ж': 5, 'З': 5, 'Х': 5, 'Ц': 5, 'Ч': 5,
    'Ш': 8, 'Э': 8, 'Ю': 8,
    'Ф': 10, 'Щ': 10, 'Ъ': 10
}

total_score = sum(scrabble_scores[letter.upper()] for letter in k)

print(total_score)

# Это решение использует один словарь, содержащий стоимость всех букв, как английских, 
# так и русских. Таким образом, оно определяет стоимость слова, просто суммируя 
# стоимости всех его букв.